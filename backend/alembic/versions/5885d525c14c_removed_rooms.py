"""removed rooms

Revision ID: 5885d525c14c
Revises: d43c0373761a
Create Date: 2025-01-30 19:02:06.136410

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5885d525c14c'
down_revision: Union[str, None] = 'd43c0373761a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_apartments_apartment_number', table_name='apartments')
    op.drop_index('ix_apartments_id', table_name='apartments')
    op.drop_table('apartments')
    op.drop_index('ix_houses_address', table_name='houses')
    op.drop_index('ix_houses_id', table_name='houses')
    op.drop_table('houses')
    op.drop_index('ix_tenants_id', table_name='tenants')
    op.drop_table('tenants')
    op.drop_index('ix_complaints_id', table_name='complaints')
    op.drop_table('complaints')
    op.drop_index('ix_payments_id', table_name='payments')
    op.drop_table('payments')
    op.drop_index('ix_landlords_id', table_name='landlords')
    op.drop_table('landlords')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('landlords',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('contact', sa.INTEGER(), nullable=False),
    sa.Column('password', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index('ix_landlords_id', 'landlords', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=True),
    sa.Column('date', sa.VARCHAR(), nullable=True),
    sa.Column('tenant_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_payments_id', 'payments', ['id'], unique=False)
    op.create_table('complaints',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=True),
    sa.Column('tenant_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_complaints_id', 'complaints', ['id'], unique=False)
    op.create_table('tenants',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('contact', sa.VARCHAR(), nullable=True),
    sa.Column('apartment_id', sa.INTEGER(), nullable=True),
    sa.Column('password', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_tenants_id', 'tenants', ['id'], unique=False)
    op.create_table('houses',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('address', sa.VARCHAR(), nullable=True),
    sa.Column('rent_price', sa.FLOAT(), nullable=True),
    sa.Column('num_apartments', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_houses_id', 'houses', ['id'], unique=False)
    op.create_index('ix_houses_address', 'houses', ['address'], unique=1)
    op.create_table('apartments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('house_id', sa.INTEGER(), nullable=True),
    sa.Column('apartment_number', sa.VARCHAR(), nullable=True),
    sa.Column('rooms', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['house_id'], ['houses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_apartments_id', 'apartments', ['id'], unique=False)
    op.create_index('ix_apartments_apartment_number', 'apartments', ['apartment_number'], unique=1)
    # ### end Alembic commands ###
